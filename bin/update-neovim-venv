#!/usr/bin/env zsh
set -eo pipefail

: ${NEOVIM_VENV:=$HOME/.virtualenvs/neovim}

# clear any possibly active venvs
export path=(${path#$HOME/.virtualenvs/*})

get-pyver()	{ ${1:-python} -c "import sys; print('%d.%d' % sys.version_info[:2])"; }

pre=()
if (( ${+commands[prefixout]} )); then
	pre+=(prefixout -dtc --)
fi

use-venv() {
	local venv=${1:?}
	export path=(
		$venv/bin
		$path
	)
	hash -r
}

if [[ ! -d $NEOVIM_VENV ]]; then
	# Py2 is dead
	# rm -f $NEOVIM_VENV/bin/python
	# $pre virtualenv-multiver $NEOVIM_VENV $(get-pyver python2)

	rm -f $NEOVIM_VENV/bin/python
	$pre virtualenv-multiver $NEOVIM_VENV $(get-pyver python3)

	ln -sfvr $NEOVIM_VENV/bin/python3 $NEOVIM_VENV/bin/python

	echo "-- Enabling global site packages for all vers"
	$pre rm -fv $NEOVIM_VENV/**/no-global-site-packages.txt
fi

use-venv $NEOVIM_VENV

tools_pkgs=(
	six
	psutil setproctitle

	isort importmagic
	'pycodestyle<2.4' pydocstyle
	pyflakes mccabe bandit

	pylint
	# metrics
	# fluff
	pylint2junit
	# plpylint
	# autopylint
	# setuptools-lint
	# pylint-protobuf
	# pylint-patcher
	# pylint-topology
	# pylint-mccabe
	# pylint-enums
	# pylint-exit
	# pylint-werkzeug
	# pylint-common
	# pylint-venv
	# pylint-celery
	# pylint-flask
	# pylint-peewee
	# pylint-django
	# pylint-json2html

	# mistune
    #
	# pytest
	# pytest-pylint
	# pytest-cov
	# coveralls

	# can autoremove unused imports and vars:
	# $ autoflake --in-place --remove-unused-variables example.py
	autoflake

	flake8
	# flake8-mypy
	flake8-imports
	flake8-isort
	# flake8-future
	flake8-docstrings
	mypy
	pyre-check

	yapf
	autopep8
	# sixer

	sux

	pyls-mypy
	pyls-isort

	black
	pyls-black

	# notedown
)

pyls_pkgs=(
	# python-language-server
	# 'git+https://github.com/palantir/python-language-server@develop#egg=pyls'
	'python-language-server[all]'
)

nvim_pkgs=(
	neovim

	# jedi
	rope ropevim
	# typing
)

#pip2 install -U $nvim_pkgs
pip3 install -U $nvim_pkgs $tools_pkgs $pyls_pkgs

